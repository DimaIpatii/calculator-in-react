{"version":3,"sources":["webpack://calculator-in-react/./src/index.js"],"names":["setLogLevel","buttons","name","id","style","key","getMathResult","bufferVal","currentVal","Keyboard","output","React","underlinedOperator","setUnderlinedOperator","prev","input","buffer","className","map","button","type","onClick","event","target","test","n","current","length","includes","operator","sum","Number","handleOperators","Screen","Calculator","setOutput","ReactDOM","document","getElementById","module","hot","accept"],"mappings":"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","file":"main.4e8df5774138b6af61ae.js","sourcesContent":["/* eslint-disable no-extra-semi */\n/* eslint-disable no-useless-escape */\n/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\n// Clear DevTool [HMR] messages:\nimport {setLogLevel} from 'webpack/hot/log';\nsetLogLevel('error');\n\n// Sass:\nimport './sass/main.scss';\n\n//React:\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n\n\nconst buttons = [\n    {\n      name : 'AC',\n      id : 'clear',\n      style : 'keyboard__button_clear',\n      key : 'AC'\n    },\n    {\n      name : '%',\n      id : 'perc',\n      style : 'keyboard__button_perc',\n      key : '%'\n    },\n    {\n      name : '/',\n      id : 'divide',\n      style : 'keyboard__button_divide',\n      key : '/'\n    },\n    {\n      name : 'x',\n      id : 'multiply',\n      style : 'keyboard__button_multiply',\n      key : '*'\n    },\n    {\n      name : '-',\n      id : 'subtract',\n      style : 'keyboard__button_subtract',\n      key : '-'\n    },\n    {\n      name : '+',\n      id : 'add',\n      style : 'keyboard__button_add',\n      key : '+'\n    },\n    {\n      name : '=',\n      id : 'equals',\n      style : 'keyboard__button_equals',\n      key : '='\n    },\n    {\n      name : 9,\n      id : 'nine',\n      style : '',\n      key : '9'\n    },\n    {\n      name : 8,\n      id : 'eight',\n      style : '',\n      key : '8'\n    },\n    {\n      name : 7,\n      id : 'seven',\n      style : '',\n      key : '7'\n    },\n    {\n      name : 6,\n      id : 'six',\n      style : '',\n      key : '6'\n    },\n    {\n      name : 5,\n      id : 'five',\n      style : '',\n      key : '5'\n    },\n    {\n      name : 4,\n      id : 'four',\n      style : '',\n      key : '4'\n    },\n    {\n      name : 3,\n      id : 'three',\n      style : '',\n      key : '3'\n    },\n    {\n      name : 2,\n      id : 'two',\n      style : '',\n      key : '2'\n    },\n    {\n      name : 1,\n      id : 'one',\n      style : '',\n      key : '1'\n    },\n    {\n      name : 0,\n      id : 'zero',\n      style : '',\n      key : '0'\n    },\n    {\n      name : '.',\n      id : 'decimal',\n      style : '',\n      key : '.'\n    }\n  ]\n \n\nconst getMathResult = {\n    '/':(bufferVal,currentVal) => bufferVal /= currentVal,\n    '*':(bufferVal, currentVal) => bufferVal *= currentVal,\n    '-':(bufferVal, currentVal) => bufferVal -= currentVal,\n    '+':(bufferVal, currentVal) => bufferVal += currentVal,\n    '=':(bufferVal, currentVal) => bufferVal,\n}\n\n\n\n\nfunction Keyboard ({output}) {\n  \n  const [underlinedOperator, setUnderlinedOperator] = React.useState(null);\n  \n  const prev = React.useRef('');\n  const input = React.useRef('');\n  const buffer = React.useRef(0);\n  \n  \n  // **************************************************\n  \n  \n  const getButton = (key) => {\n    // Handle Numbers and dot\n    if(/[0-9|\\.]/.test(key)){\n      handleNumbers(key);\n    }\n    \n    // Handle Operators\n    if(/[\\/\\*\\-\\+]/.test(key)){\n      handleOperators(key);\n    }\n    \n    // Handle Equal\n    if(key == '='){\n      handleEqual(key);\n    }\n    \n    // Handle Reset\n    if(key === 'AC'){\n      reset();\n    }\n  }\n  \n  \n  // **************************************************\n  \n  const reset = () => {\n    output('0');\n    buffer.current = 0;\n    input.current = '';\n    prev.current = ''\n    setUnderlinedOperator(null);\n  }\n  \n  const handleNumbers = (n) => {\n    // Display Numbers typing\n    \n    // Multiple Zero controller:\n    if(n == '0' && input.current.length == 0) return;\n    \n    // Multiple period controller:\n    if(input.current.includes('.') && n == '.') return;\n    \n    output(input.current += n);\n  }\n  \n  const handleEqual = () => {\n    let sum;\n      \n      if(/[\\/\\*\\-\\+]/.test(prev.current) && underlinedOperator === '-'){\n        sum = getMathResult[prev.current](buffer.current, Number(-input.current));       \n      }\n      else{\n        sum = getMathResult[underlinedOperator](buffer.current, Number(input.current));       \n      }\n\n      output(sum);\n      buffer.current = sum;\n      input.current = '';\n      prev.current = '';\n  }\n  \n  const handleOperators = (operator) => {\n    \n      // Underline Current Operator\n      setUnderlinedOperator(operator);  \n    \n      // Does Math  based on Previous operator, buffer value val and current number value\n      if(underlinedOperator && input.current){\n\n          const sum = getMathResult[underlinedOperator](buffer.current, Number(input.current)); \n          // display claculated value don the screen:\n          output(sum);\n          \n          buffer.current = sum;\n          input.current = ''; \n      }\n      // define buffer value when operator is clicked for the first time\n      else{\n        buffer.current += Number(input.current);\n        input.current = '';\n      }\n    \n      \n     // Define Previously selected operator:\n      prev.current = underlinedOperator;\n  }\n  \n  \n  // **************************************************\n\n  return (\n    <main className=\"claculator__keyboard keyboard\">\n          {buttons.map(button => {\n            return (\n              <button \n                key={button.key}\n                id={button.id} \n                type=\"button\" \n                name={button.key} \n                className={`keyboard__button ${button.style} ${underlinedOperator == button.key ? 'selected' : ''}`}\n                onClick={(event) => getButton(event.target.name)}\n                >\n                {button.name}\n              </button>\n            )\n          })}\n   </main>\n  )\n};\n\n\n function Screen ({sum}){\n   \n   return (\n     <header  className=\"claculator__screen screen\">\n         <div id=\"display\" className=\"screen__data\" >{sum}</div>\n     </header>\n   )\n }\n\n  \n  \n  function Calculator () {\n    const [output, setOutput] = React.useState('0');\n    \n    const getInput = (n) => setOutput(n);\n\n    return (\n      <div className=\"claculator\">\n        <Screen sum={output}/>\n        <Keyboard output={getInput}/>\n      </div>\n    )\n  }\n  \n  ReactDOM.render(<Calculator />, document.getElementById('root'));\n\n\n\n\nmodule.hot.accept();"],"sourceRoot":""}